// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  name        String
  role        Role          @default(USER)
  username    String
  password    String
  email       String?       @unique
  address     String
  phone       String
  birthdate   DateTime
  User_Search User_Search[]
  Order       Order[]
  StatusUser  StatusUser?   @default(ONLINE)
  Restaurant  Restaurant[]

  @@map("user")
}

enum StatusUser {
  ONLINE
  OFFLLINE
}

enum Role {
  USER
  TEADER
  ADMIN
}

model User_Search {
  id     Int    @id @default(autoincrement())
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId Int    @map("user_id")
  name   String

  @@map("user_search")
}

model Restaurant {
  id      Int               @id @default(autoincrement())
  name    String
  address String
  phone   String
  type    String
  status  StatusRestaurant?
  Menu    Menu[]
  user    User?              @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId  Int?              @map("user_id")

  @@map("Restaurants")
}

enum StatusRestaurant {
  OPEN
  CLOSE
}

model Menu {
  id           Int        @id @default(autoincrement())
  name         String
  price        Decimal    @db.Decimal(10, 2)
  menuImg      Menu_Img?  @relation(fields: [menuImgId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  menuImgId    Int?       @map("menu_img_id")
  category     Category   @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  categoryId   Int        @map("category_id")
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  restaurantId Int        @map("restaurant_id")

  @@map("menus")
}

model Category {
  id   Int    @id @default(autoincrement())
  name String
  Menu Menu[]

  @@map("category")
}

model Menu_Img {
  id   Int    @id @default(autoincrement())
  url  String
  Menu Menu[]

  @@map("menu_img")
}

model Order {
  id              Int      @id @default(autoincrement())
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId          Int      @map("user_id")
  status          Status   @default(ODER_RECEIVED)
  datetime        DateTime
  deliveryAddress String
  notes           String?
  paymentMethod   String
  paymentAmount   Decimal
  paymentDatetime DateTime
  img_pay         String

  @@map("order")
}

enum Status {
  ODER_RECEIVED
  PREPARING_FOOD
  AWAITING_DELiVERY
  OUT_FOR_DELIVERY
  DELIVERED
}
